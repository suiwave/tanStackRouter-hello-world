/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SampleRouteImport } from './routes/sample/route'
import { Route as IndexImport } from './routes/index'
import { Route as SampleIndexImport } from './routes/sample/index'
import { Route as SampleTestIndexImport } from './routes/sample/test/index'
import { Route as SampleChildIndexImport } from './routes/sample/child/index'

// Create/Update Routes

const SampleRouteRoute = SampleRouteImport.update({
  path: '/sample',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SampleIndexRoute = SampleIndexImport.update({
  path: '/',
  getParentRoute: () => SampleRouteRoute,
} as any)

const SampleTestIndexRoute = SampleTestIndexImport.update({
  path: '/test/',
  getParentRoute: () => SampleRouteRoute,
} as any)

const SampleChildIndexRoute = SampleChildIndexImport.update({
  path: '/child/',
  getParentRoute: () => SampleRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sample': {
      id: '/sample'
      path: '/sample'
      fullPath: '/sample'
      preLoaderRoute: typeof SampleRouteImport
      parentRoute: typeof rootRoute
    }
    '/sample/': {
      id: '/sample/'
      path: '/'
      fullPath: '/sample/'
      preLoaderRoute: typeof SampleIndexImport
      parentRoute: typeof SampleRouteImport
    }
    '/sample/child/': {
      id: '/sample/child/'
      path: '/child'
      fullPath: '/sample/child'
      preLoaderRoute: typeof SampleChildIndexImport
      parentRoute: typeof SampleRouteImport
    }
    '/sample/test/': {
      id: '/sample/test/'
      path: '/test'
      fullPath: '/sample/test'
      preLoaderRoute: typeof SampleTestIndexImport
      parentRoute: typeof SampleRouteImport
    }
  }
}

// Create and export the route tree

interface SampleRouteRouteChildren {
  SampleIndexRoute: typeof SampleIndexRoute
  SampleChildIndexRoute: typeof SampleChildIndexRoute
  SampleTestIndexRoute: typeof SampleTestIndexRoute
}

const SampleRouteRouteChildren: SampleRouteRouteChildren = {
  SampleIndexRoute: SampleIndexRoute,
  SampleChildIndexRoute: SampleChildIndexRoute,
  SampleTestIndexRoute: SampleTestIndexRoute,
}

const SampleRouteRouteWithChildren = SampleRouteRoute._addFileChildren(
  SampleRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sample': typeof SampleRouteRouteWithChildren
  '/sample/': typeof SampleIndexRoute
  '/sample/child': typeof SampleChildIndexRoute
  '/sample/test': typeof SampleTestIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sample': typeof SampleIndexRoute
  '/sample/child': typeof SampleChildIndexRoute
  '/sample/test': typeof SampleTestIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/sample': typeof SampleRouteRouteWithChildren
  '/sample/': typeof SampleIndexRoute
  '/sample/child/': typeof SampleChildIndexRoute
  '/sample/test/': typeof SampleTestIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sample' | '/sample/' | '/sample/child' | '/sample/test'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sample' | '/sample/child' | '/sample/test'
  id:
    | '__root__'
    | '/'
    | '/sample'
    | '/sample/'
    | '/sample/child/'
    | '/sample/test/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SampleRouteRoute: typeof SampleRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SampleRouteRoute: SampleRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/sample"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/sample": {
      "filePath": "sample/route.tsx",
      "children": [
        "/sample/",
        "/sample/child/",
        "/sample/test/"
      ]
    },
    "/sample/": {
      "filePath": "sample/index.tsx",
      "parent": "/sample"
    },
    "/sample/child/": {
      "filePath": "sample/child/index.tsx",
      "parent": "/sample"
    },
    "/sample/test/": {
      "filePath": "sample/test/index.tsx",
      "parent": "/sample"
    }
  }
}
ROUTE_MANIFEST_END */
